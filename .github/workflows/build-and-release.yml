name: Build and Release ScreenQA

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build executable
      run: |
        if (Test-Path "ScreenQA.spec") {
            python -m PyInstaller ScreenQA.spec --clean
        } else {
            python -m PyInstaller --onefile --windowed --name "ScreenQA" main.py
        }
        
    - name: Test executable
      run: |
        if (Test-Path "dist/ScreenQA.exe") {
            Write-Host "✅ Build successful - ScreenQA.exe created"
            Get-Item "dist/ScreenQA.exe" | Select-Object Name, Length
        } else {
            Write-Error "❌ Build failed - executable not found"
            exit 1
        }
        
    - name: Upload Windows executable
      uses: actions/upload-artifact@v4
      with:
        name: ScreenQA-Windows
        path: dist/ScreenQA.exe
        retention-days: 30

  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build executable
      run: |
        if [ -f "ScreenQA.spec" ]; then
            python -m PyInstaller ScreenQA.spec --clean
        else
            python -m PyInstaller --onefile --name "ScreenQA" main.py
        fi
        
    - name: Test executable
      run: |
        if [ -f "dist/ScreenQA" ]; then
            echo "✅ Build successful - ScreenQA binary created"
            ls -la dist/ScreenQA
        else
            echo "❌ Build failed - executable not found"
            exit 1
        fi
        
    - name: Upload Linux executable
      uses: actions/upload-artifact@v4
      with:
        name: ScreenQA-Linux
        path: dist/ScreenQA
        retention-days: 30

  create-release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download Windows executable
      uses: actions/download-artifact@v4
      with:
        name: ScreenQA-Windows
        path: ./artifacts/
        
    - name: Download Linux executable
      uses: actions/download-artifact@v4
      with:
        name: ScreenQA-Linux
        path: ./artifacts/
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ./artifacts/ScreenQA.exe
          ./artifacts/ScreenQA
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}